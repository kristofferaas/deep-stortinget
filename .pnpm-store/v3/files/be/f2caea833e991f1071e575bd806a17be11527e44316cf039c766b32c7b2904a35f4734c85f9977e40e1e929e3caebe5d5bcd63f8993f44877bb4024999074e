{"version":3,"file":"router-manifest.js","sources":["../../src/router-manifest.ts"],"sourcesContent":["import { rootRouteId } from '@tanstack/router-core'\nimport { VIRTUAL_MODULES } from './virtual-modules'\nimport { loadVirtualModule } from './loadVirtualModule'\nimport type { RouterManagedTag } from '@tanstack/router-core'\n\n/**\n * @description Returns the router manifest that should be sent to the client.\n * This includes only the assets and preloads for the current route and any\n * special assets that are needed for the client. It does not include relationships\n * between routes or any other data that is not needed for the client.\n */\nexport async function getStartManifest() {\n  const { tsrStartManifest } = await loadVirtualModule(\n    VIRTUAL_MODULES.startManifest,\n  )\n  const startManifest = tsrStartManifest()\n\n  const rootRoute = (startManifest.routes[rootRouteId] =\n    startManifest.routes[rootRouteId] || {})\n\n  rootRoute.assets = rootRoute.assets || []\n\n  let script = `import('${startManifest.clientEntry}')`\n  if (process.env.TSS_DEV_SERVER === 'true') {\n    const { injectedHeadScripts } = await loadVirtualModule(\n      VIRTUAL_MODULES.injectedHeadScripts,\n    )\n    if (injectedHeadScripts) {\n      script = `${injectedHeadScripts + ';'}${script}`\n    }\n  }\n  rootRoute.assets.push({\n    tag: 'script',\n    attrs: {\n      type: 'module',\n      suppressHydrationWarning: true,\n      async: true,\n    },\n    children: script,\n  })\n\n  const manifest = {\n    ...startManifest,\n    routes: Object.fromEntries(\n      Object.entries(startManifest.routes).map(([k, v]) => {\n        const { preloads, assets } = v\n        const result = {} as {\n          preloads?: Array<string>\n          assets?: Array<RouterManagedTag>\n        }\n        if (preloads) {\n          result['preloads'] = preloads\n        }\n        if (assets) {\n          result['assets'] = assets\n        }\n        return [k, result]\n      }),\n    ),\n  }\n\n  // Strip out anything that isn't needed for the client\n  return manifest\n}\n"],"names":[],"mappings":";;;AAWA,eAAsB,mBAAmB;AACvC,QAAM,EAAE,iBAAA,IAAqB,MAAM;AAAA,IACjC,gBAAgB;AAAA,EAAA;AAElB,QAAM,gBAAgB,iBAAA;AAEtB,QAAM,YAAa,cAAc,OAAO,WAAW,IACjD,cAAc,OAAO,WAAW,KAAK,CAAA;AAEvC,YAAU,SAAS,UAAU,UAAU,CAAA;AAEvC,MAAI,SAAS,WAAW,cAAc,WAAW;AACjD,MAAI,QAAQ,IAAI,mBAAmB,QAAQ;AACzC,UAAM,EAAE,oBAAA,IAAwB,MAAM;AAAA,MACpC,gBAAgB;AAAA,IAAA;AAElB,QAAI,qBAAqB;AACvB,eAAS,GAAG,sBAAsB,GAAG,GAAG,MAAM;AAAA,IAChD;AAAA,EACF;AACA,YAAU,OAAO,KAAK;AAAA,IACpB,KAAK;AAAA,IACL,OAAO;AAAA,MACL,MAAM;AAAA,MACN,0BAA0B;AAAA,MAC1B,OAAO;AAAA,IAAA;AAAA,IAET,UAAU;AAAA,EAAA,CACX;AAED,QAAM,WAAW;AAAA,IACf,GAAG;AAAA,IACH,QAAQ,OAAO;AAAA,MACb,OAAO,QAAQ,cAAc,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM;AACnD,cAAM,EAAE,UAAU,OAAA,IAAW;AAC7B,cAAM,SAAS,CAAA;AAIf,YAAI,UAAU;AACZ,iBAAO,UAAU,IAAI;AAAA,QACvB;AACA,YAAI,QAAQ;AACV,iBAAO,QAAQ,IAAI;AAAA,QACrB;AACA,eAAO,CAAC,GAAG,MAAM;AAAA,MACnB,CAAC;AAAA,IAAA;AAAA,EACH;AAIF,SAAO;AACT;"}